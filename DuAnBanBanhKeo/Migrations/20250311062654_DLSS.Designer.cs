// <auto-generated />
using System;
using DuAnBanBanhKeo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DuAnBanBanhKeo.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250311062654_DLSS")]
    partial class DLSS
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DuAnBanBanhKeo.Api.Data.Entities.TaiKhoan", b =>
                {
                    b.Property<string>("MaTaiKhoan")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaKhachHang")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaNhanVienNavigationMaNhanVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTaiKhoan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TinhTrang")
                        .HasColumnType("int");

                    b.Property<string>("VaiTro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTaiKhoan");

                    b.HasIndex("MaKhachHang");

                    b.HasIndex("MaNhanVienNavigationMaNhanVien");

                    b.ToTable("TaiKhoans");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.AnhSanPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MaSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UrlAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaSanPham");

                    b.ToTable("AnhSanPhams");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.ChiTietCombo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MaCombo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SoLuongCombo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaCombo");

                    b.HasIndex("MaSanPham");

                    b.ToTable("ChiTietCombos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaCombo = "C001",
                            MaSanPham = "SP001",
                            SoLuongCombo = 0
                        },
                        new
                        {
                            Id = 2,
                            MaCombo = "C001",
                            MaSanPham = "SP002",
                            SoLuongCombo = 0
                        },
                        new
                        {
                            Id = 3,
                            MaCombo = "C002",
                            MaSanPham = "SP001",
                            SoLuongCombo = 0
                        },
                        new
                        {
                            Id = 4,
                            MaCombo = "C002",
                            MaSanPham = "SP002",
                            SoLuongCombo = 0
                        });
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.ChiTietDonHang", b =>
                {
                    b.Property<int>("MaChiTietDonHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaChiTietDonHang"));

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MaCombo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaDonHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaSanPham")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaChiTietDonHang");

                    b.HasIndex("MaCombo");

                    b.HasIndex("MaDonHang");

                    b.HasIndex("MaSanPham");

                    b.ToTable("ChiTietDonHangs");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.ChiTietGioHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MaCombo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaGioHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaSanPham")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaCombo");

                    b.HasIndex("MaGioHang");

                    b.HasIndex("MaSanPham");

                    b.ToTable("ChiTietGioHangs");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.ChiTietHoaDon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MaCombo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaHoaDon")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaSanPham")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaCombo");

                    b.HasIndex("MaHoaDon");

                    b.HasIndex("MaSanPham");

                    b.ToTable("ChiTietHoaDons");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.Combo", b =>
                {
                    b.Property<string>("MaCombo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Anh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoLuongCombo")
                        .HasColumnType("int");

                    b.Property<string>("TenCombo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaCombo");

                    b.ToTable("Combos");

                    b.HasData(
                        new
                        {
                            MaCombo = "C001",
                            Anh = "combo-banh-keo.jpg",
                            Gia = 200000m,
                            MoTa = "Combo gồm 1 bánh kem sôcôla và 2 hộp kẹo dẻo",
                            SoLuongCombo = 50,
                            TenCombo = "Combo Bánh & Kẹo",
                            TrangThai = 1
                        },
                        new
                        {
                            MaCombo = "C002",
                            Anh = "combo-nuoc-ngot.jpg",
                            Gia = 180000m,
                            MoTa = "Combo gồm 1 bánh kem sôcôla và 1 nước ngọt Cola",
                            SoLuongCombo = 80,
                            TenCombo = "Combo Nước Ngọt & Bánh",
                            TrangThai = 1
                        });
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.DonHang", b =>
                {
                    b.Property<string>("MaDonHang")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly>("NgayDatHang")
                        .HasColumnType("date");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaDonHang");

                    b.HasIndex("MaKhachHang");

                    b.ToTable("DonHangs");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.GiamGia", b =>
                {
                    b.Property<string>("MaGiamGia")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("GiaTri")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("NgayBatDau")
                        .HasColumnType("date");

                    b.Property<DateOnly>("NgayKetThuc")
                        .HasColumnType("date");

                    b.Property<int>("SoLuongMaNhapToiDa")
                        .HasColumnType("int");

                    b.Property<string>("TenGiamGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaGiamGia");

                    b.ToTable("GiamGias");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.GioHang", b =>
                {
                    b.Property<string>("MaGioHang")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaKhachHang")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly>("NgayTao")
                        .HasColumnType("date");

                    b.HasKey("MaGioHang");

                    b.HasIndex("MaKhachHang");

                    b.ToTable("GioHangs");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.HoaDon", b =>
                {
                    b.Property<string>("MaHoaDon")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaGiamGia")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaKhachHang")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly>("NgayXuatHoaDon")
                        .HasColumnType("date");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaHoaDon");

                    b.HasIndex("MaGiamGia");

                    b.HasIndex("MaKhachHang");

                    b.ToTable("HoaDons");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.KhachHang", b =>
                {
                    b.Property<string>("MaKhachHang")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Cccd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("NgayDangKy")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaKhachHang");

                    b.ToTable("KhachHangs");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.MaNhapGiamGia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("MaGiamGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaNhap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaGiamGia");

                    b.ToTable("MaNhapGiamGias");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.NhaCungCapBanh", b =>
                {
                    b.Property<int>("MaNhaCungCapBanh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNhaCungCapBanh"));

                    b.Property<string>("TenNhaCungCap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNhaCungCapBanh");

                    b.ToTable("NhaCungCapBanhs");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.NhaCungCapKeo", b =>
                {
                    b.Property<int>("MaNhaCungCapKeo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNhaCungCapKeo"));

                    b.Property<string>("TenNhaCungCap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNhaCungCapKeo");

                    b.ToTable("NhaCungCapKeos");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.NhaCungCapNuocNgot", b =>
                {
                    b.Property<int>("MaNhaCungCapNuocNgot")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNhaCungCapNuocNgot"));

                    b.Property<string>("TenNhaCungCap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNhaCungCapNuocNgot");

                    b.ToTable("NhaCungCapNuocNgots");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.NhanVien", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Cccd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("NgayBatDau")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.Property<string>("VaiTro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNhanVien");

                    b.ToTable("NhanViens");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.SanPham", b =>
                {
                    b.Property<string>("MaSanPham")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DonVi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly?>("Hsd")
                        .HasColumnType("date");

                    b.Property<int?>("MaNhaCungCapBanh")
                        .HasColumnType("int");

                    b.Property<int?>("MaNhaCungCapKeo")
                        .HasColumnType("int");

                    b.Property<int?>("MaNhaCungCapNuocNgot")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("NgayThem")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("Nsx")
                        .HasColumnType("date");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaSanPham");

                    b.HasIndex("MaNhaCungCapBanh");

                    b.HasIndex("MaNhaCungCapKeo");

                    b.HasIndex("MaNhaCungCapNuocNgot");

                    b.ToTable("SanPhams");

                    b.HasData(
                        new
                        {
                            MaSanPham = "SP001",
                            DonVi = "Cái",
                            Gia = 150000m,
                            Hsd = new DateOnly(2025, 9, 11),
                            MoTa = "Bánh kem sôcôla tươi ngon",
                            NgayThem = new DateOnly(2025, 3, 11),
                            Nsx = new DateOnly(2024, 12, 11),
                            SoLuong = 100,
                            TenSanPham = "Bánh Kem Sôcôla",
                            TrangThai = 1
                        },
                        new
                        {
                            MaSanPham = "SP002",
                            DonVi = "Hộp",
                            Gia = 50000m,
                            Hsd = new DateOnly(2026, 3, 11),
                            MoTa = "Kẹo dẻo ngon miệng cho mọi lứa tuổi",
                            NgayThem = new DateOnly(2025, 3, 11),
                            Nsx = new DateOnly(2025, 1, 11),
                            SoLuong = 200,
                            TenSanPham = "Kẹo Dẻo",
                            TrangThai = 1
                        },
                        new
                        {
                            MaSanPham = "SP003",
                            DonVi = "Lít",
                            Gia = 10000m,
                            Hsd = new DateOnly(2025, 11, 11),
                            MoTa = "Nước ngọt cola cho mùa hè mát lạnh",
                            NgayThem = new DateOnly(2025, 3, 11),
                            Nsx = new DateOnly(2025, 2, 11),
                            SoLuong = 300,
                            TenSanPham = "Nước Ngọt Cola",
                            TrangThai = 1
                        });
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Api.Data.Entities.TaiKhoan", b =>
                {
                    b.HasOne("DuAnBanBanhKeo.Data.Entities.KhachHang", "MaKhachHangNavigation")
                        .WithMany("TaiKhoans")
                        .HasForeignKey("MaKhachHang");

                    b.HasOne("DuAnBanBanhKeo.Data.Entities.NhanVien", "MaNhanVienNavigation")
                        .WithMany("TaiKhoans")
                        .HasForeignKey("MaNhanVienNavigationMaNhanVien");

                    b.Navigation("MaKhachHangNavigation");

                    b.Navigation("MaNhanVienNavigation");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.AnhSanPham", b =>
                {
                    b.HasOne("DuAnBanBanhKeo.Data.Entities.SanPham", "MaSanPhamNavigation")
                        .WithMany("AnhSanPhams")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaSanPhamNavigation");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.ChiTietCombo", b =>
                {
                    b.HasOne("DuAnBanBanhKeo.Data.Entities.Combo", "MaComboNavigation")
                        .WithMany("ChiTietCombos")
                        .HasForeignKey("MaCombo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DuAnBanBanhKeo.Data.Entities.SanPham", "MaSanPhamNavigation")
                        .WithMany("ChiTietCombos")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaComboNavigation");

                    b.Navigation("MaSanPhamNavigation");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.ChiTietDonHang", b =>
                {
                    b.HasOne("DuAnBanBanhKeo.Data.Entities.Combo", "Combo")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("MaCombo");

                    b.HasOne("DuAnBanBanhKeo.Data.Entities.DonHang", "DonHang")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("MaDonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DuAnBanBanhKeo.Data.Entities.SanPham", "MaSanPhamNavigation")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("MaSanPham");

                    b.Navigation("Combo");

                    b.Navigation("DonHang");

                    b.Navigation("MaSanPhamNavigation");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.ChiTietGioHang", b =>
                {
                    b.HasOne("DuAnBanBanhKeo.Data.Entities.Combo", "Combo")
                        .WithMany("ChiTietGioHangs")
                        .HasForeignKey("MaCombo");

                    b.HasOne("DuAnBanBanhKeo.Data.Entities.GioHang", "GioHang")
                        .WithMany("ChiTietGioHangs")
                        .HasForeignKey("MaGioHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DuAnBanBanhKeo.Data.Entities.SanPham", "SanPham")
                        .WithMany("ChiTietGioHangs")
                        .HasForeignKey("MaSanPham");

                    b.Navigation("Combo");

                    b.Navigation("GioHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.ChiTietHoaDon", b =>
                {
                    b.HasOne("DuAnBanBanhKeo.Data.Entities.Combo", "Combo")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("MaCombo");

                    b.HasOne("DuAnBanBanhKeo.Data.Entities.HoaDon", "HoaDon")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("MaHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DuAnBanBanhKeo.Data.Entities.SanPham", "SanPham")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("MaSanPham");

                    b.Navigation("Combo");

                    b.Navigation("HoaDon");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.DonHang", b =>
                {
                    b.HasOne("DuAnBanBanhKeo.Data.Entities.KhachHang", "KhachHang")
                        .WithMany("DonHangs")
                        .HasForeignKey("MaKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.GioHang", b =>
                {
                    b.HasOne("DuAnBanBanhKeo.Data.Entities.KhachHang", "KhachHang")
                        .WithMany("GioHangs")
                        .HasForeignKey("MaKhachHang");

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.HoaDon", b =>
                {
                    b.HasOne("DuAnBanBanhKeo.Data.Entities.GiamGia", "MaGiamGiaNavigation")
                        .WithMany("HoaDons")
                        .HasForeignKey("MaGiamGia")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DuAnBanBanhKeo.Data.Entities.KhachHang", "KhachHang")
                        .WithMany("HoaDons")
                        .HasForeignKey("MaKhachHang");

                    b.Navigation("KhachHang");

                    b.Navigation("MaGiamGiaNavigation");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.MaNhapGiamGia", b =>
                {
                    b.HasOne("DuAnBanBanhKeo.Data.Entities.GiamGia", "GiamGia")
                        .WithMany("MaNhapGiamGias")
                        .HasForeignKey("MaGiamGia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiamGia");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.SanPham", b =>
                {
                    b.HasOne("DuAnBanBanhKeo.Data.Entities.NhaCungCapBanh", "MaNhaCungCapBanhNavigation")
                        .WithMany("SanPhams")
                        .HasForeignKey("MaNhaCungCapBanh");

                    b.HasOne("DuAnBanBanhKeo.Data.Entities.NhaCungCapKeo", "MaNhaCungCapKeoNavigation")
                        .WithMany("SanPhams")
                        .HasForeignKey("MaNhaCungCapKeo");

                    b.HasOne("DuAnBanBanhKeo.Data.Entities.NhaCungCapNuocNgot", "MaNhaCungCapNuocNgotNavigation")
                        .WithMany("SanPhams")
                        .HasForeignKey("MaNhaCungCapNuocNgot");

                    b.Navigation("MaNhaCungCapBanhNavigation");

                    b.Navigation("MaNhaCungCapKeoNavigation");

                    b.Navigation("MaNhaCungCapNuocNgotNavigation");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.Combo", b =>
                {
                    b.Navigation("ChiTietCombos");

                    b.Navigation("ChiTietDonHangs");

                    b.Navigation("ChiTietGioHangs");

                    b.Navigation("ChiTietHoaDons");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.DonHang", b =>
                {
                    b.Navigation("ChiTietDonHangs");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.GiamGia", b =>
                {
                    b.Navigation("HoaDons");

                    b.Navigation("MaNhapGiamGias");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.GioHang", b =>
                {
                    b.Navigation("ChiTietGioHangs");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.HoaDon", b =>
                {
                    b.Navigation("ChiTietHoaDons");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.KhachHang", b =>
                {
                    b.Navigation("DonHangs");

                    b.Navigation("GioHangs");

                    b.Navigation("HoaDons");

                    b.Navigation("TaiKhoans");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.NhaCungCapBanh", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.NhaCungCapKeo", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.NhaCungCapNuocNgot", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.NhanVien", b =>
                {
                    b.Navigation("TaiKhoans");
                });

            modelBuilder.Entity("DuAnBanBanhKeo.Data.Entities.SanPham", b =>
                {
                    b.Navigation("AnhSanPhams");

                    b.Navigation("ChiTietCombos");

                    b.Navigation("ChiTietDonHangs");

                    b.Navigation("ChiTietGioHangs");

                    b.Navigation("ChiTietHoaDons");
                });
#pragma warning restore 612, 618
        }
    }
}
